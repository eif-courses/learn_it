import { type NextPage } from "next";
import Head from "next/head";
import { Header } from "src/components/Header";
import { useSession } from "next-auth/react";
import { api, type RouterOutputs } from "~/utils/api";
import { useState } from "react";
import { useRouter } from "next/router";
import en from "../../locales/en";
import fr from "../../locales/fr";
import bg from "../../locales/bg";
import de from "../../locales/de";
import it from "../../locales/it";
import lt from "../../locales/lt";
import UploadForm from "~/components/SingleFileUploadForm";


// https://www.youtube.com/watch?v=J1gzN1SAhyM



const Home: NextPage = () => {


  const router = useRouter();
  const { locale } = router;
  const t =
    locale === 'bg' ? bg :
      locale === 'en' ? en :
        locale === 'fr' ? fr :
          locale === 'de' ? de :
            locale === 'it' ? it :
              locale === 'lt' ? lt : en;
  return (
    <>
      <Head>
        <title>Erasmus+ projektas</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto">
        <Header />

        <section className="bg-white dark:bg-gray-900">
          <div className="grid max-w-screen-xl px-4 py-8 mx-auto lg:gap-8 xl:gap-0 lg:py-16 lg:grid-cols-12">
            <div className="mr-auto place-self-center lg:col-span-7">
              <h1
                className="max-w-2xl mb-4 text-4xl font-extrabold tracking-tight leading-none md:text-5xl xl:text-6xl dark:text-white">{t.title}</h1>
              <p
                className="max-w-2xl mb-6 font-light text-gray-500 lg:mb-8 md:text-lg lg:text-xl dark:text-gray-400">
                {t.subtitle}
              </p>
              <a href="#"
                 className="inline-flex items-center justify-center px-5 py-3 mr-3 text-gray-900 border border-gray-300font-medium text-center rounded-lg bg-primary-700 hover:bg-gray-100 focus:ring-4 focus:ring-primary-300 dark:focus:ring-primary-900">
                {t.platform}
                <svg className="w-5 h-5 ml-2 -mr-1" fill="currentColor" viewBox="0 0 20 20"
                     xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd"
                        d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
                        clip-rule="evenodd"></path>
                </svg>
              </a>
              <a href="#"
                 className="inline-flex items-center justify-center px-5 py-3 text-base font-medium text-center text-gray-900 border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 dark:text-white dark:border-gray-700 dark:hover:bg-gray-700 dark:focus:ring-gray-800">
                {t.courses}
              </a>
            </div>
            <div className="hidden lg:mt-0 lg:col-span-5 lg:flex">
              <img src="https://flowbite.s3.amazonaws.com/blocks/marketing-ui/hero/phone-mockup.png" alt="mockup"/>
            </div>
          </div>
        </section>
        <Content />
        <UploadForm/>
      </main>
    </>
  );
};
export default Home;

type Topic = RouterOutputs["topic"]["getAll"][0];

const Content: React.FC = () => {
  const { data: sessionData } = useSession();
  const [selectedTopic, setSelectedTopic] = useState<Topic | null>(null);
  const { data: topics, refetch: refetchTopics } = api.topic.getAll.useQuery(
    undefined,
    { enabled: sessionData?.user !== undefined,
      onSuccess: (data) => {
        setSelectedTopic(selectedTopic ?? data[0] ?? null);
      }
    }
  );


  const createTopic = api.topic.create.useMutation({
    onSuccess: () => {
      void refetchTopics();
    },
  });

  return (
    <div className="mx-5 mt-5 grid grid-cols-4 gap-2">
      <div className="px-2">
        <ul className="menu rounded-box w-56 bg-base-100 p-2">
          {topics?.map((topic) => (
            <li key={topic.id}>
              <a
                href="#"
                onClick={(e) => {
                  e.preventDefault();
                  setSelectedTopic(topic);
                }}
              >
                {topic.title}
              </a>
            </li>
          ))}

        </ul>
        <div className="divider"></div>
        <div className="col-span-3">
          <input
            type="text"
            placeholder="New Topic"
            className="input-bordered input input-sm w-full"
            onKeyDown={(e) => {
              if (e.key === "Enter") {
                createTopic.mutate({
                  title: e.currentTarget.value
                });
                e.currentTarget.value = "";
              }
            }}
          />
        </div>
      </div>
    </div>
  );
}
